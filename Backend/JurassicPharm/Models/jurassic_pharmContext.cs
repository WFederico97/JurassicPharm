// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace JurassicPharm.Models;

public partial class JurassicPharmContext : DbContext
{
    public JurassicPharmContext(DbContextOptions<JurassicPharmContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Ciudades> Ciudades { get; set; }

    public virtual DbSet<Clientes> Clientes { get; set; }

    public virtual DbSet<DetallesFactura> DetallesFactura { get; set; }

    public virtual DbSet<DetallesReceta> DetallesReceta { get; set; }

    public virtual DbSet<Empleados> Empleados { get; set; }

    public virtual DbSet<Facturas> Facturas { get; set; }

    public virtual DbSet<Localidades> Localidades { get; set; }

    public virtual DbSet<Marcas> Marcas { get; set; }

    public virtual DbSet<Medicos> Medicos { get; set; }

    public virtual DbSet<ObrasSociales> ObrasSociales { get; set; }

    public virtual DbSet<Proveedores> Proveedores { get; set; }

    public virtual DbSet<Provincias> Provincias { get; set; }

    public virtual DbSet<Recetas> Recetas { get; set; }

    public virtual DbSet<Stocks> Stocks { get; set; }

    public virtual DbSet<Sucursales> Sucursales { get; set; }

    public virtual DbSet<Suministros> Suministros { get; set; }

    public virtual DbSet<TiposDistribucion> TiposDistribucion { get; set; }

    public virtual DbSet<TiposSuministro> TiposSuministro { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Ciudades>(entity =>
        {
            entity.HasKey(e => e.IdCiudad).HasName("PK__CIUDADES__B7DC4CD5C608193F");

            entity.ToTable("CIUDADES");

            entity.Property(e => e.IdCiudad).HasColumnName("id_ciudad");
            entity.Property(e => e.IdLocalidad).HasColumnName("id_localidad");
            entity.Property(e => e.Nombre)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nombre");

            entity.HasOne(d => d.IdLocalidadNavigation).WithMany(p => p.Ciudades)
                .HasForeignKey(d => d.IdLocalidad)
                .HasConstraintName("FK_CIUDADES_LOCALIDADES");
        });

        modelBuilder.Entity<Clientes>(entity =>
        {
            entity.HasKey(e => e.IdCliente).HasName("PK__CLIENTES__677F38F582F05F01");

            entity.ToTable("CLIENTES");

            entity.Property(e => e.IdCliente)
                .ValueGeneratedNever()
                .HasColumnName("id_cliente");
            entity.Property(e => e.Altura).HasColumnName("altura");
            entity.Property(e => e.Apellido)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("apellido");
            entity.Property(e => e.Calle)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("calle");
            entity.Property(e => e.CorreoElectronico)
                .HasMaxLength(80)
                .IsUnicode(false)
                .HasColumnName("correo_electronico");
            entity.Property(e => e.IdCiudad).HasColumnName("id_ciudad");
            entity.Property(e => e.IdObraSocial).HasColumnName("id_obra_social");
            entity.Property(e => e.Nombre)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nombre");

            entity.HasOne(d => d.IdCiudadNavigation).WithMany(p => p.Clientes)
                .HasForeignKey(d => d.IdCiudad)
                .HasConstraintName("FK_CLIENTES_CIUDADES");

            entity.HasOne(d => d.IdObraSocialNavigation).WithMany(p => p.Clientes)
                .HasForeignKey(d => d.IdObraSocial)
                .HasConstraintName("FK_CLIENTES_OBRAS_SOCIALES");
        });

        modelBuilder.Entity<DetallesFactura>(entity =>
        {
            entity.HasKey(e => e.IdDetalleFactura).HasName("PK__DETALLES__F6BFE343A7703636");

            entity.ToTable("DETALLES_FACTURA");

            entity.Property(e => e.IdDetalleFactura).HasColumnName("id_detalle_factura");
            entity.Property(e => e.Cantidad).HasColumnName("cantidad");
            entity.Property(e => e.IdSuministro).HasColumnName("id_suministro");
            entity.Property(e => e.NroFactura).HasColumnName("nro_factura");
            entity.Property(e => e.PreVenta).HasColumnName("pre_venta");

            entity.HasOne(d => d.IdSuministroNavigation).WithMany(p => p.DetallesFactura)
                .HasForeignKey(d => d.IdSuministro)
                .HasConstraintName("FK_DETALLES_FACTURA_SUMINISTROS");

            entity.HasOne(d => d.NroFacturaNavigation).WithMany(p => p.DetallesFactura)
                .HasForeignKey(d => d.NroFactura)
                .HasConstraintName("FK_DETALLES_FACTURA_FACTURAS");
        });

        modelBuilder.Entity<DetallesReceta>(entity =>
        {
            entity.HasKey(e => e.IdDetalleReceta).HasName("PK__DETALLES__2C99ACD3530A9E7C");

            entity.ToTable("DETALLES_RECETA");

            entity.Property(e => e.IdDetalleReceta).HasColumnName("id_detalle_receta");
            entity.Property(e => e.Cantidad).HasColumnName("cantidad");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(80)
                .IsUnicode(false)
                .HasColumnName("descripcion");
            entity.Property(e => e.IdReceta).HasColumnName("id_receta");
            entity.Property(e => e.IdSuministro).HasColumnName("id_suministro");

            entity.HasOne(d => d.IdRecetaNavigation).WithMany(p => p.DetallesReceta)
                .HasForeignKey(d => d.IdReceta)
                .HasConstraintName("FK_DETALLES_RECETA_RECETAS");

            entity.HasOne(d => d.IdSuministroNavigation).WithMany(p => p.DetallesReceta)
                .HasForeignKey(d => d.IdSuministro)
                .HasConstraintName("FK_DETALLES_RECETA_SUMINISTROS");
        });

        modelBuilder.Entity<Empleados>(entity =>
        {
            entity.HasKey(e => e.LegajoEmpleado).HasName("PK__EMPLEADO__DF787D2A40F63E7C");

            entity.ToTable("EMPLEADOS");

            entity.Property(e => e.LegajoEmpleado).HasColumnName("legajo_empleado");
            entity.Property(e => e.Altura).HasColumnName("altura");
            entity.Property(e => e.Apellido)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("apellido");
            entity.Property(e => e.Calle)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("calle");
            entity.Property(e => e.CorreoElectronico)
                .HasMaxLength(80)
                .IsUnicode(false)
                .HasColumnName("correo_electronico");
            entity.Property(e => e.IdCiudad).HasColumnName("id_ciudad");
            entity.Property(e => e.IdSucursal).HasColumnName("id_sucursal");
            entity.Property(e => e.Nombre)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nombre");

            entity.HasOne(d => d.IdCiudadNavigation).WithMany(p => p.Empleados)
                .HasForeignKey(d => d.IdCiudad)
                .HasConstraintName("FK_EMPLEADOS_CIUDADES");

            entity.HasOne(d => d.IdSucursalNavigation).WithMany(p => p.Empleados)
                .HasForeignKey(d => d.IdSucursal)
                .HasConstraintName("FK_CLIENTES_SUCURSALES");
        });

        modelBuilder.Entity<Facturas>(entity =>
        {
            entity.HasKey(e => e.NroFactura).HasName("PK__FACTURAS__B31FA9AFDAA314A2");

            entity.ToTable("FACTURAS");

            entity.Property(e => e.NroFactura).HasColumnName("nro_factura");
            entity.Property(e => e.Fecha).HasColumnName("fecha");
            entity.Property(e => e.IdCliente).HasColumnName("id_cliente");
            entity.Property(e => e.IdSucursal).HasColumnName("id_sucursal");

            entity.HasOne(d => d.IdClienteNavigation).WithMany(p => p.Facturas)
                .HasForeignKey(d => d.IdCliente)
                .HasConstraintName("FK_FACTURAS_CLIENTES");

            entity.HasOne(d => d.IdSucursalNavigation).WithMany(p => p.Facturas)
                .HasForeignKey(d => d.IdSucursal)
                .HasConstraintName("FK_FACTURAS_SUCURSALES");
        });

        modelBuilder.Entity<Localidades>(entity =>
        {
            entity.HasKey(e => e.IdLocalidad).HasName("PK__LOCALIDA__9A5E82AABE0D072D");

            entity.ToTable("LOCALIDADES");

            entity.Property(e => e.IdLocalidad).HasColumnName("id_localidad");
            entity.Property(e => e.IdProvincia).HasColumnName("id_provincia");
            entity.Property(e => e.Nombre)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nombre");

            entity.HasOne(d => d.IdProvinciaNavigation).WithMany(p => p.Localidades)
                .HasForeignKey(d => d.IdProvincia)
                .HasConstraintName("FK_LOCALIDADES_PROVINCIAS");
        });

        modelBuilder.Entity<Marcas>(entity =>
        {
            entity.HasKey(e => e.IdMarca).HasName("PK__MARCAS__7E43E99E2916FEFF");

            entity.ToTable("MARCAS");

            entity.Property(e => e.IdMarca).HasColumnName("id_marca");
            entity.Property(e => e.Nombre)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nombre");
        });

        modelBuilder.Entity<Medicos>(entity =>
        {
            entity.HasKey(e => e.Matricula).HasName("PK__MEDICOS__30962D147DE3393F");

            entity.ToTable("MEDICOS");

            entity.Property(e => e.Matricula)
                .ValueGeneratedNever()
                .HasColumnName("matricula");
            entity.Property(e => e.Apellido)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("apellido");
            entity.Property(e => e.CorreoElectronico)
                .HasMaxLength(80)
                .IsUnicode(false)
                .HasColumnName("correo_electronico");
            entity.Property(e => e.Nombre)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nombre");
        });

        modelBuilder.Entity<ObrasSociales>(entity =>
        {
            entity.HasKey(e => e.IdObraSocial).HasName("PK__OBRAS_SO__89039DF61B424F56");

            entity.ToTable("OBRAS_SOCIALES");

            entity.Property(e => e.IdObraSocial).HasColumnName("id_obra_social");
            entity.Property(e => e.IdCiudad).HasColumnName("id_ciudad");
            entity.Property(e => e.Nombre)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nombre");

            entity.HasOne(d => d.IdCiudadNavigation).WithMany(p => p.ObrasSociales)
                .HasForeignKey(d => d.IdCiudad)
                .HasConstraintName("FK_OBRAS_SOCIALES_CIUDADES");
        });

        modelBuilder.Entity<Proveedores>(entity =>
        {
            entity.HasKey(e => e.IdProveedor).HasName("PK__PROVEEDO__8D3DFE282ACC098E");

            entity.ToTable("PROVEEDORES");

            entity.Property(e => e.IdProveedor).HasColumnName("id_proveedor");
            entity.Property(e => e.IdCiudad).HasColumnName("id_ciudad");
            entity.Property(e => e.RazonSocial)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("razon_social");

            entity.HasOne(d => d.IdCiudadNavigation).WithMany(p => p.Proveedores)
                .HasForeignKey(d => d.IdCiudad)
                .HasConstraintName("FK_PROVEEDORES_CIUDADES");
        });

        modelBuilder.Entity<Provincias>(entity =>
        {
            entity.HasKey(e => e.IdProvincia).HasName("PK__PROVINCI__66C18BFD1341DE3F");

            entity.ToTable("PROVINCIAS");

            entity.Property(e => e.IdProvincia).HasColumnName("id_provincia");
            entity.Property(e => e.Nombre)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nombre");
        });

        modelBuilder.Entity<Recetas>(entity =>
        {
            entity.HasKey(e => e.IdReceta).HasName("PK__RECETAS__11DB53ABF6E6DF1E");

            entity.ToTable("RECETAS");

            entity.Property(e => e.IdReceta).HasColumnName("id_receta");
            entity.Property(e => e.IdObraSocial).HasColumnName("id_obra_social");
            entity.Property(e => e.Matricula).HasColumnName("matricula");

            entity.HasOne(d => d.IdObraSocialNavigation).WithMany(p => p.Recetas)
                .HasForeignKey(d => d.IdObraSocial)
                .HasConstraintName("FK_RECETAS_OBRAS_SOCIALES");

            entity.HasOne(d => d.MatriculaNavigation).WithMany(p => p.Recetas)
                .HasForeignKey(d => d.Matricula)
                .HasConstraintName("FK_RECETAS_MEDICOS");
        });

        modelBuilder.Entity<Stocks>(entity =>
        {
            entity.HasKey(e => e.IdStock).HasName("PK__STOCKS__3A39590A0C543D5F");

            entity.ToTable("STOCKS");

            entity.Property(e => e.IdStock).HasColumnName("id_stock");
            entity.Property(e => e.Cantidad).HasColumnName("cantidad");
            entity.Property(e => e.Fecha).HasColumnName("fecha");
            entity.Property(e => e.IdProveedor).HasColumnName("id_proveedor");
            entity.Property(e => e.IdSucursal).HasColumnName("id_sucursal");
            entity.Property(e => e.LegajoEmpleado).HasColumnName("legajo_empleado");

            entity.HasOne(d => d.IdProveedorNavigation).WithMany(p => p.Stocks)
                .HasForeignKey(d => d.IdProveedor)
                .HasConstraintName("FK_STOCKS_PROVEEDORES");

            entity.HasOne(d => d.IdSucursalNavigation).WithMany(p => p.Stocks)
                .HasForeignKey(d => d.IdSucursal)
                .HasConstraintName("FK_STOCKS_SUCURSALES");

            entity.HasOne(d => d.LegajoEmpleadoNavigation).WithMany(p => p.Stocks)
                .HasForeignKey(d => d.LegajoEmpleado)
                .HasConstraintName("FK_STOCKS_EMPLEADOS");
        });

        modelBuilder.Entity<Sucursales>(entity =>
        {
            entity.HasKey(e => e.IdSucursal).HasName("PK__SUCURSAL__4C7580136F7C1585");

            entity.ToTable("SUCURSALES");

            entity.Property(e => e.IdSucursal).HasColumnName("id_sucursal");
            entity.Property(e => e.Altura).HasColumnName("altura");
            entity.Property(e => e.Calle)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("calle");
            entity.Property(e => e.IdCiudad).HasColumnName("id_ciudad");

            entity.HasOne(d => d.IdCiudadNavigation).WithMany(p => p.Sucursales)
                .HasForeignKey(d => d.IdCiudad)
                .HasConstraintName("FK_SUCURSALES_CIUDADES");
        });

        modelBuilder.Entity<Suministros>(entity =>
        {
            entity.HasKey(e => e.IdSuministro).HasName("PK__SUMINIST__ABFE9BD1FBD497AA");

            entity.ToTable("SUMINISTROS");

            entity.Property(e => e.IdSuministro).HasColumnName("id_suministro");
            entity.Property(e => e.IdMarca).HasColumnName("id_marca");
            entity.Property(e => e.IdTipoDistribucion).HasColumnName("id_tipo_distribucion");
            entity.Property(e => e.IdTipoSuministro).HasColumnName("id_tipo_suministro");
            entity.Property(e => e.Nombre)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nombre");
            entity.Property(e => e.PreUnitario).HasColumnName("pre_unitario");

            entity.HasOne(d => d.IdMarcaNavigation).WithMany(p => p.Suministros)
                .HasForeignKey(d => d.IdMarca)
                .HasConstraintName("FK_SUMINISTROS_MARCAS");

            entity.HasOne(d => d.IdTipoDistribucionNavigation).WithMany(p => p.Suministros)
                .HasForeignKey(d => d.IdTipoDistribucion)
                .HasConstraintName("FK_SUMINISTROS_TIPOS_DISTRIBUCION");

            entity.HasOne(d => d.IdTipoSuministroNavigation).WithMany(p => p.Suministros)
                .HasForeignKey(d => d.IdTipoSuministro)
                .HasConstraintName("FK_SUMINISTROS_TIPOS_SUMINISTROS");
        });

        modelBuilder.Entity<TiposDistribucion>(entity =>
        {
            entity.HasKey(e => e.IdTipoDistribucion).HasName("PK__TIPOS_DI__CA6BE0F2CE3824E5");

            entity.ToTable("TIPOS_DISTRIBUCION");

            entity.Property(e => e.IdTipoDistribucion).HasColumnName("id_tipo_distribucion");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("descripcion");
        });

        modelBuilder.Entity<TiposSuministro>(entity =>
        {
            entity.HasKey(e => e.IdTipoSuministro).HasName("PK__TIPOS_SU__22748C15A8DFDC5D");

            entity.ToTable("TIPOS_SUMINISTRO");

            entity.Property(e => e.IdTipoSuministro).HasColumnName("id_tipo_suministro");
            entity.Property(e => e.Nombre)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nombre");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}