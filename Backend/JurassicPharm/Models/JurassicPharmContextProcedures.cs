// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using JurassicPharm.Models;
using Microsoft.Data.SqlClient;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Data;
using System.Threading;
using System.Threading.Tasks;

namespace JurassicPharm.Models
{
    public partial class JurassicPharmContext
    {
        private IJurassicPharmContextProcedures _procedures;

        public virtual IJurassicPharmContextProcedures Procedures
        {
            get
            {
                if (_procedures is null) _procedures = new JurassicPharmContextProcedures(this);
                return _procedures;
            }
            set
            {
                _procedures = value;
            }
        }

        public IJurassicPharmContextProcedures GetProcedures()
        {
            return Procedures;
        }
    }

    public partial class JurassicPharmContextProcedures : IJurassicPharmContextProcedures
    {
        private readonly JurassicPharmContext _context;

        public JurassicPharmContextProcedures(JurassicPharmContext context)
        {
            _context = context;
        }

        public virtual async Task<int> SP_CONTROLAR_RECETA_PROLONGADAAsync(int? ID_CLIENTE, DateOnly? FECHA_ACTUAL, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new []
            {
                new SqlParameter
                {
                    ParameterName = "ID_CLIENTE",
                    Value = ID_CLIENTE ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Int,
                },
                new SqlParameter
                {
                    ParameterName = "FECHA_ACTUAL",
                    Value = FECHA_ACTUAL ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Date,
                },
                parameterreturnValue,
            };
            var _ = await _context.Database.ExecuteSqlRawAsync("EXEC @returnValue = [dbo].[SP_CONTROLAR_RECETA_PROLONGADA] @ID_CLIENTE = @ID_CLIENTE, @FECHA_ACTUAL = @FECHA_ACTUAL", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }

        public virtual async Task<List<SP_TOP_PROVEEDORES_ENTREGASResult>> SP_TOP_PROVEEDORES_ENTREGASAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new []
            {
                parameterreturnValue,
            };
            var _ = await _context.SqlQueryAsync<SP_TOP_PROVEEDORES_ENTREGASResult>("EXEC @returnValue = [dbo].[SP_TOP_PROVEEDORES_ENTREGAS]", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }
    }
}
